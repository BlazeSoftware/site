/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BlazeSite {
    }
    interface ComponentsAccordions {
        "name": string;
    }
    interface ComponentsAddresses {
        "name": string;
    }
    interface ComponentsAlerts {
        "name": string;
    }
    interface ComponentsAutocomplete {
        "name": string;
    }
    interface ComponentsAvatars {
        "name": string;
    }
    interface ComponentsBackToTop {
        "name": string;
    }
    interface ComponentsBadges {
        "name": string;
    }
    interface ComponentsBreadcrumbs {
        "name": string;
    }
    interface ComponentsButtons {
        "name": string;
    }
    interface ComponentsCalendars {
        "name": string;
    }
    interface ComponentsCards {
        "name": string;
    }
    interface ComponentsCounter {
        "name": string;
    }
    interface ComponentsDivider {
        "name": string;
    }
    interface ComponentsFileUpload {
        "name": string;
    }
    interface ComponentsHeadings {
        "name": string;
    }
    interface ComponentsInputs {
        "name": string;
    }
    interface ComponentsLists {
        "name": string;
    }
    interface ComponentsMenus {
        "name": string;
    }
    interface ComponentsOverlays {
        "name": string;
    }
    interface ComponentsPagination {
        "name": string;
    }
    interface ComponentsProgress {
        "name": string;
    }
    interface ComponentsRanges {
        "name": string;
    }
    interface ComponentsSticky {
        "name": string;
    }
    interface ComponentsTables {
        "name": string;
    }
    interface ComponentsTabs {
        "name": string;
    }
    interface ComponentsTimelines {
        "name": string;
    }
    interface ComponentsToasts {
        "name": string;
    }
    interface ComponentsToggles {
        "name": string;
    }
    interface ComponentsTooltips {
        "name": string;
    }
    interface ComponentsTrees {
        "name": string;
    }
    interface ComponentsTypography {
        "name": string;
    }
    interface CustomBuild {
        "name": string;
    }
    interface ExampleBasket {
        "name": string;
    }
    interface ExampleLogin {
        "name": string;
    }
    interface GenericsGlobal {
        "name": string;
    }
    interface HomePage {
    }
    interface InstallPage {
        "name": string;
    }
    interface ObjectsContainers {
        "name": string;
    }
    interface ObjectsDrawers {
        "name": string;
    }
    interface ObjectsGrid {
        "name": string;
    }
    interface ObjectsImages {
        "name": string;
    }
    interface ObjectsMedias {
        "name": string;
    }
    interface ObjectsModals {
        "name": string;
    }
    interface ObjectsPanels {
        "name": string;
    }
    interface PageNotFound {
    }
    interface PageTemplate {
        "name": string;
    }
    interface SiteHeader {
    }
    interface SiteNav {
        "close": () => Promise<void>;
        "show": () => Promise<void>;
    }
    interface UtilsAlignment {
        "name": string;
    }
    interface UtilsBoxing {
        "name": string;
    }
    interface UtilsElevation {
        "name": string;
    }
    interface UtilsSizes {
        "name": string;
    }
    interface UtilsVisibility {
        "name": string;
    }
}
declare global {
    interface HTMLBlazeSiteElement extends Components.BlazeSite, HTMLStencilElement {
    }
    var HTMLBlazeSiteElement: {
        prototype: HTMLBlazeSiteElement;
        new (): HTMLBlazeSiteElement;
    };
    interface HTMLComponentsAccordionsElement extends Components.ComponentsAccordions, HTMLStencilElement {
    }
    var HTMLComponentsAccordionsElement: {
        prototype: HTMLComponentsAccordionsElement;
        new (): HTMLComponentsAccordionsElement;
    };
    interface HTMLComponentsAddressesElement extends Components.ComponentsAddresses, HTMLStencilElement {
    }
    var HTMLComponentsAddressesElement: {
        prototype: HTMLComponentsAddressesElement;
        new (): HTMLComponentsAddressesElement;
    };
    interface HTMLComponentsAlertsElement extends Components.ComponentsAlerts, HTMLStencilElement {
    }
    var HTMLComponentsAlertsElement: {
        prototype: HTMLComponentsAlertsElement;
        new (): HTMLComponentsAlertsElement;
    };
    interface HTMLComponentsAutocompleteElement extends Components.ComponentsAutocomplete, HTMLStencilElement {
    }
    var HTMLComponentsAutocompleteElement: {
        prototype: HTMLComponentsAutocompleteElement;
        new (): HTMLComponentsAutocompleteElement;
    };
    interface HTMLComponentsAvatarsElement extends Components.ComponentsAvatars, HTMLStencilElement {
    }
    var HTMLComponentsAvatarsElement: {
        prototype: HTMLComponentsAvatarsElement;
        new (): HTMLComponentsAvatarsElement;
    };
    interface HTMLComponentsBackToTopElement extends Components.ComponentsBackToTop, HTMLStencilElement {
    }
    var HTMLComponentsBackToTopElement: {
        prototype: HTMLComponentsBackToTopElement;
        new (): HTMLComponentsBackToTopElement;
    };
    interface HTMLComponentsBadgesElement extends Components.ComponentsBadges, HTMLStencilElement {
    }
    var HTMLComponentsBadgesElement: {
        prototype: HTMLComponentsBadgesElement;
        new (): HTMLComponentsBadgesElement;
    };
    interface HTMLComponentsBreadcrumbsElement extends Components.ComponentsBreadcrumbs, HTMLStencilElement {
    }
    var HTMLComponentsBreadcrumbsElement: {
        prototype: HTMLComponentsBreadcrumbsElement;
        new (): HTMLComponentsBreadcrumbsElement;
    };
    interface HTMLComponentsButtonsElement extends Components.ComponentsButtons, HTMLStencilElement {
    }
    var HTMLComponentsButtonsElement: {
        prototype: HTMLComponentsButtonsElement;
        new (): HTMLComponentsButtonsElement;
    };
    interface HTMLComponentsCalendarsElement extends Components.ComponentsCalendars, HTMLStencilElement {
    }
    var HTMLComponentsCalendarsElement: {
        prototype: HTMLComponentsCalendarsElement;
        new (): HTMLComponentsCalendarsElement;
    };
    interface HTMLComponentsCardsElement extends Components.ComponentsCards, HTMLStencilElement {
    }
    var HTMLComponentsCardsElement: {
        prototype: HTMLComponentsCardsElement;
        new (): HTMLComponentsCardsElement;
    };
    interface HTMLComponentsCounterElement extends Components.ComponentsCounter, HTMLStencilElement {
    }
    var HTMLComponentsCounterElement: {
        prototype: HTMLComponentsCounterElement;
        new (): HTMLComponentsCounterElement;
    };
    interface HTMLComponentsDividerElement extends Components.ComponentsDivider, HTMLStencilElement {
    }
    var HTMLComponentsDividerElement: {
        prototype: HTMLComponentsDividerElement;
        new (): HTMLComponentsDividerElement;
    };
    interface HTMLComponentsFileUploadElement extends Components.ComponentsFileUpload, HTMLStencilElement {
    }
    var HTMLComponentsFileUploadElement: {
        prototype: HTMLComponentsFileUploadElement;
        new (): HTMLComponentsFileUploadElement;
    };
    interface HTMLComponentsHeadingsElement extends Components.ComponentsHeadings, HTMLStencilElement {
    }
    var HTMLComponentsHeadingsElement: {
        prototype: HTMLComponentsHeadingsElement;
        new (): HTMLComponentsHeadingsElement;
    };
    interface HTMLComponentsInputsElement extends Components.ComponentsInputs, HTMLStencilElement {
    }
    var HTMLComponentsInputsElement: {
        prototype: HTMLComponentsInputsElement;
        new (): HTMLComponentsInputsElement;
    };
    interface HTMLComponentsListsElement extends Components.ComponentsLists, HTMLStencilElement {
    }
    var HTMLComponentsListsElement: {
        prototype: HTMLComponentsListsElement;
        new (): HTMLComponentsListsElement;
    };
    interface HTMLComponentsMenusElement extends Components.ComponentsMenus, HTMLStencilElement {
    }
    var HTMLComponentsMenusElement: {
        prototype: HTMLComponentsMenusElement;
        new (): HTMLComponentsMenusElement;
    };
    interface HTMLComponentsOverlaysElement extends Components.ComponentsOverlays, HTMLStencilElement {
    }
    var HTMLComponentsOverlaysElement: {
        prototype: HTMLComponentsOverlaysElement;
        new (): HTMLComponentsOverlaysElement;
    };
    interface HTMLComponentsPaginationElement extends Components.ComponentsPagination, HTMLStencilElement {
    }
    var HTMLComponentsPaginationElement: {
        prototype: HTMLComponentsPaginationElement;
        new (): HTMLComponentsPaginationElement;
    };
    interface HTMLComponentsProgressElement extends Components.ComponentsProgress, HTMLStencilElement {
    }
    var HTMLComponentsProgressElement: {
        prototype: HTMLComponentsProgressElement;
        new (): HTMLComponentsProgressElement;
    };
    interface HTMLComponentsRangesElement extends Components.ComponentsRanges, HTMLStencilElement {
    }
    var HTMLComponentsRangesElement: {
        prototype: HTMLComponentsRangesElement;
        new (): HTMLComponentsRangesElement;
    };
    interface HTMLComponentsStickyElement extends Components.ComponentsSticky, HTMLStencilElement {
    }
    var HTMLComponentsStickyElement: {
        prototype: HTMLComponentsStickyElement;
        new (): HTMLComponentsStickyElement;
    };
    interface HTMLComponentsTablesElement extends Components.ComponentsTables, HTMLStencilElement {
    }
    var HTMLComponentsTablesElement: {
        prototype: HTMLComponentsTablesElement;
        new (): HTMLComponentsTablesElement;
    };
    interface HTMLComponentsTabsElement extends Components.ComponentsTabs, HTMLStencilElement {
    }
    var HTMLComponentsTabsElement: {
        prototype: HTMLComponentsTabsElement;
        new (): HTMLComponentsTabsElement;
    };
    interface HTMLComponentsTimelinesElement extends Components.ComponentsTimelines, HTMLStencilElement {
    }
    var HTMLComponentsTimelinesElement: {
        prototype: HTMLComponentsTimelinesElement;
        new (): HTMLComponentsTimelinesElement;
    };
    interface HTMLComponentsToastsElement extends Components.ComponentsToasts, HTMLStencilElement {
    }
    var HTMLComponentsToastsElement: {
        prototype: HTMLComponentsToastsElement;
        new (): HTMLComponentsToastsElement;
    };
    interface HTMLComponentsTogglesElement extends Components.ComponentsToggles, HTMLStencilElement {
    }
    var HTMLComponentsTogglesElement: {
        prototype: HTMLComponentsTogglesElement;
        new (): HTMLComponentsTogglesElement;
    };
    interface HTMLComponentsTooltipsElement extends Components.ComponentsTooltips, HTMLStencilElement {
    }
    var HTMLComponentsTooltipsElement: {
        prototype: HTMLComponentsTooltipsElement;
        new (): HTMLComponentsTooltipsElement;
    };
    interface HTMLComponentsTreesElement extends Components.ComponentsTrees, HTMLStencilElement {
    }
    var HTMLComponentsTreesElement: {
        prototype: HTMLComponentsTreesElement;
        new (): HTMLComponentsTreesElement;
    };
    interface HTMLComponentsTypographyElement extends Components.ComponentsTypography, HTMLStencilElement {
    }
    var HTMLComponentsTypographyElement: {
        prototype: HTMLComponentsTypographyElement;
        new (): HTMLComponentsTypographyElement;
    };
    interface HTMLCustomBuildElement extends Components.CustomBuild, HTMLStencilElement {
    }
    var HTMLCustomBuildElement: {
        prototype: HTMLCustomBuildElement;
        new (): HTMLCustomBuildElement;
    };
    interface HTMLExampleBasketElement extends Components.ExampleBasket, HTMLStencilElement {
    }
    var HTMLExampleBasketElement: {
        prototype: HTMLExampleBasketElement;
        new (): HTMLExampleBasketElement;
    };
    interface HTMLExampleLoginElement extends Components.ExampleLogin, HTMLStencilElement {
    }
    var HTMLExampleLoginElement: {
        prototype: HTMLExampleLoginElement;
        new (): HTMLExampleLoginElement;
    };
    interface HTMLGenericsGlobalElement extends Components.GenericsGlobal, HTMLStencilElement {
    }
    var HTMLGenericsGlobalElement: {
        prototype: HTMLGenericsGlobalElement;
        new (): HTMLGenericsGlobalElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLInstallPageElement extends Components.InstallPage, HTMLStencilElement {
    }
    var HTMLInstallPageElement: {
        prototype: HTMLInstallPageElement;
        new (): HTMLInstallPageElement;
    };
    interface HTMLObjectsContainersElement extends Components.ObjectsContainers, HTMLStencilElement {
    }
    var HTMLObjectsContainersElement: {
        prototype: HTMLObjectsContainersElement;
        new (): HTMLObjectsContainersElement;
    };
    interface HTMLObjectsDrawersElement extends Components.ObjectsDrawers, HTMLStencilElement {
    }
    var HTMLObjectsDrawersElement: {
        prototype: HTMLObjectsDrawersElement;
        new (): HTMLObjectsDrawersElement;
    };
    interface HTMLObjectsGridElement extends Components.ObjectsGrid, HTMLStencilElement {
    }
    var HTMLObjectsGridElement: {
        prototype: HTMLObjectsGridElement;
        new (): HTMLObjectsGridElement;
    };
    interface HTMLObjectsImagesElement extends Components.ObjectsImages, HTMLStencilElement {
    }
    var HTMLObjectsImagesElement: {
        prototype: HTMLObjectsImagesElement;
        new (): HTMLObjectsImagesElement;
    };
    interface HTMLObjectsMediasElement extends Components.ObjectsMedias, HTMLStencilElement {
    }
    var HTMLObjectsMediasElement: {
        prototype: HTMLObjectsMediasElement;
        new (): HTMLObjectsMediasElement;
    };
    interface HTMLObjectsModalsElement extends Components.ObjectsModals, HTMLStencilElement {
    }
    var HTMLObjectsModalsElement: {
        prototype: HTMLObjectsModalsElement;
        new (): HTMLObjectsModalsElement;
    };
    interface HTMLObjectsPanelsElement extends Components.ObjectsPanels, HTMLStencilElement {
    }
    var HTMLObjectsPanelsElement: {
        prototype: HTMLObjectsPanelsElement;
        new (): HTMLObjectsPanelsElement;
    };
    interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {
    }
    var HTMLPageNotFoundElement: {
        prototype: HTMLPageNotFoundElement;
        new (): HTMLPageNotFoundElement;
    };
    interface HTMLPageTemplateElement extends Components.PageTemplate, HTMLStencilElement {
    }
    var HTMLPageTemplateElement: {
        prototype: HTMLPageTemplateElement;
        new (): HTMLPageTemplateElement;
    };
    interface HTMLSiteHeaderElement extends Components.SiteHeader, HTMLStencilElement {
    }
    var HTMLSiteHeaderElement: {
        prototype: HTMLSiteHeaderElement;
        new (): HTMLSiteHeaderElement;
    };
    interface HTMLSiteNavElement extends Components.SiteNav, HTMLStencilElement {
    }
    var HTMLSiteNavElement: {
        prototype: HTMLSiteNavElement;
        new (): HTMLSiteNavElement;
    };
    interface HTMLUtilsAlignmentElement extends Components.UtilsAlignment, HTMLStencilElement {
    }
    var HTMLUtilsAlignmentElement: {
        prototype: HTMLUtilsAlignmentElement;
        new (): HTMLUtilsAlignmentElement;
    };
    interface HTMLUtilsBoxingElement extends Components.UtilsBoxing, HTMLStencilElement {
    }
    var HTMLUtilsBoxingElement: {
        prototype: HTMLUtilsBoxingElement;
        new (): HTMLUtilsBoxingElement;
    };
    interface HTMLUtilsElevationElement extends Components.UtilsElevation, HTMLStencilElement {
    }
    var HTMLUtilsElevationElement: {
        prototype: HTMLUtilsElevationElement;
        new (): HTMLUtilsElevationElement;
    };
    interface HTMLUtilsSizesElement extends Components.UtilsSizes, HTMLStencilElement {
    }
    var HTMLUtilsSizesElement: {
        prototype: HTMLUtilsSizesElement;
        new (): HTMLUtilsSizesElement;
    };
    interface HTMLUtilsVisibilityElement extends Components.UtilsVisibility, HTMLStencilElement {
    }
    var HTMLUtilsVisibilityElement: {
        prototype: HTMLUtilsVisibilityElement;
        new (): HTMLUtilsVisibilityElement;
    };
    interface HTMLElementTagNameMap {
        "blaze-site": HTMLBlazeSiteElement;
        "components-accordions": HTMLComponentsAccordionsElement;
        "components-addresses": HTMLComponentsAddressesElement;
        "components-alerts": HTMLComponentsAlertsElement;
        "components-autocomplete": HTMLComponentsAutocompleteElement;
        "components-avatars": HTMLComponentsAvatarsElement;
        "components-back-to-top": HTMLComponentsBackToTopElement;
        "components-badges": HTMLComponentsBadgesElement;
        "components-breadcrumbs": HTMLComponentsBreadcrumbsElement;
        "components-buttons": HTMLComponentsButtonsElement;
        "components-calendars": HTMLComponentsCalendarsElement;
        "components-cards": HTMLComponentsCardsElement;
        "components-counter": HTMLComponentsCounterElement;
        "components-divider": HTMLComponentsDividerElement;
        "components-file-upload": HTMLComponentsFileUploadElement;
        "components-headings": HTMLComponentsHeadingsElement;
        "components-inputs": HTMLComponentsInputsElement;
        "components-lists": HTMLComponentsListsElement;
        "components-menus": HTMLComponentsMenusElement;
        "components-overlays": HTMLComponentsOverlaysElement;
        "components-pagination": HTMLComponentsPaginationElement;
        "components-progress": HTMLComponentsProgressElement;
        "components-ranges": HTMLComponentsRangesElement;
        "components-sticky": HTMLComponentsStickyElement;
        "components-tables": HTMLComponentsTablesElement;
        "components-tabs": HTMLComponentsTabsElement;
        "components-timelines": HTMLComponentsTimelinesElement;
        "components-toasts": HTMLComponentsToastsElement;
        "components-toggles": HTMLComponentsTogglesElement;
        "components-tooltips": HTMLComponentsTooltipsElement;
        "components-trees": HTMLComponentsTreesElement;
        "components-typography": HTMLComponentsTypographyElement;
        "custom-build": HTMLCustomBuildElement;
        "example-basket": HTMLExampleBasketElement;
        "example-login": HTMLExampleLoginElement;
        "generics-global": HTMLGenericsGlobalElement;
        "home-page": HTMLHomePageElement;
        "install-page": HTMLInstallPageElement;
        "objects-containers": HTMLObjectsContainersElement;
        "objects-drawers": HTMLObjectsDrawersElement;
        "objects-grid": HTMLObjectsGridElement;
        "objects-images": HTMLObjectsImagesElement;
        "objects-medias": HTMLObjectsMediasElement;
        "objects-modals": HTMLObjectsModalsElement;
        "objects-panels": HTMLObjectsPanelsElement;
        "page-not-found": HTMLPageNotFoundElement;
        "page-template": HTMLPageTemplateElement;
        "site-header": HTMLSiteHeaderElement;
        "site-nav": HTMLSiteNavElement;
        "utils-alignment": HTMLUtilsAlignmentElement;
        "utils-boxing": HTMLUtilsBoxingElement;
        "utils-elevation": HTMLUtilsElevationElement;
        "utils-sizes": HTMLUtilsSizesElement;
        "utils-visibility": HTMLUtilsVisibilityElement;
    }
}
declare namespace LocalJSX {
    interface BlazeSite {
    }
    interface ComponentsAccordions {
        "name"?: string;
    }
    interface ComponentsAddresses {
        "name"?: string;
    }
    interface ComponentsAlerts {
        "name"?: string;
    }
    interface ComponentsAutocomplete {
        "name"?: string;
    }
    interface ComponentsAvatars {
        "name"?: string;
    }
    interface ComponentsBackToTop {
        "name"?: string;
    }
    interface ComponentsBadges {
        "name"?: string;
    }
    interface ComponentsBreadcrumbs {
        "name"?: string;
    }
    interface ComponentsButtons {
        "name"?: string;
    }
    interface ComponentsCalendars {
        "name"?: string;
    }
    interface ComponentsCards {
        "name"?: string;
    }
    interface ComponentsCounter {
        "name"?: string;
    }
    interface ComponentsDivider {
        "name"?: string;
    }
    interface ComponentsFileUpload {
        "name"?: string;
    }
    interface ComponentsHeadings {
        "name"?: string;
    }
    interface ComponentsInputs {
        "name"?: string;
    }
    interface ComponentsLists {
        "name"?: string;
    }
    interface ComponentsMenus {
        "name"?: string;
    }
    interface ComponentsOverlays {
        "name"?: string;
    }
    interface ComponentsPagination {
        "name"?: string;
    }
    interface ComponentsProgress {
        "name"?: string;
    }
    interface ComponentsRanges {
        "name"?: string;
    }
    interface ComponentsSticky {
        "name"?: string;
    }
    interface ComponentsTables {
        "name"?: string;
    }
    interface ComponentsTabs {
        "name"?: string;
    }
    interface ComponentsTimelines {
        "name"?: string;
    }
    interface ComponentsToasts {
        "name"?: string;
    }
    interface ComponentsToggles {
        "name"?: string;
    }
    interface ComponentsTooltips {
        "name"?: string;
    }
    interface ComponentsTrees {
        "name"?: string;
    }
    interface ComponentsTypography {
        "name"?: string;
    }
    interface CustomBuild {
        "name"?: string;
    }
    interface ExampleBasket {
        "name"?: string;
    }
    interface ExampleLogin {
        "name"?: string;
    }
    interface GenericsGlobal {
        "name"?: string;
    }
    interface HomePage {
    }
    interface InstallPage {
        "name"?: string;
    }
    interface ObjectsContainers {
        "name"?: string;
    }
    interface ObjectsDrawers {
        "name"?: string;
    }
    interface ObjectsGrid {
        "name"?: string;
    }
    interface ObjectsImages {
        "name"?: string;
    }
    interface ObjectsMedias {
        "name"?: string;
    }
    interface ObjectsModals {
        "name"?: string;
    }
    interface ObjectsPanels {
        "name"?: string;
    }
    interface PageNotFound {
    }
    interface PageTemplate {
        "name"?: string;
    }
    interface SiteHeader {
    }
    interface SiteNav {
    }
    interface UtilsAlignment {
        "name"?: string;
    }
    interface UtilsBoxing {
        "name"?: string;
    }
    interface UtilsElevation {
        "name"?: string;
    }
    interface UtilsSizes {
        "name"?: string;
    }
    interface UtilsVisibility {
        "name"?: string;
    }
    interface IntrinsicElements {
        "blaze-site": BlazeSite;
        "components-accordions": ComponentsAccordions;
        "components-addresses": ComponentsAddresses;
        "components-alerts": ComponentsAlerts;
        "components-autocomplete": ComponentsAutocomplete;
        "components-avatars": ComponentsAvatars;
        "components-back-to-top": ComponentsBackToTop;
        "components-badges": ComponentsBadges;
        "components-breadcrumbs": ComponentsBreadcrumbs;
        "components-buttons": ComponentsButtons;
        "components-calendars": ComponentsCalendars;
        "components-cards": ComponentsCards;
        "components-counter": ComponentsCounter;
        "components-divider": ComponentsDivider;
        "components-file-upload": ComponentsFileUpload;
        "components-headings": ComponentsHeadings;
        "components-inputs": ComponentsInputs;
        "components-lists": ComponentsLists;
        "components-menus": ComponentsMenus;
        "components-overlays": ComponentsOverlays;
        "components-pagination": ComponentsPagination;
        "components-progress": ComponentsProgress;
        "components-ranges": ComponentsRanges;
        "components-sticky": ComponentsSticky;
        "components-tables": ComponentsTables;
        "components-tabs": ComponentsTabs;
        "components-timelines": ComponentsTimelines;
        "components-toasts": ComponentsToasts;
        "components-toggles": ComponentsToggles;
        "components-tooltips": ComponentsTooltips;
        "components-trees": ComponentsTrees;
        "components-typography": ComponentsTypography;
        "custom-build": CustomBuild;
        "example-basket": ExampleBasket;
        "example-login": ExampleLogin;
        "generics-global": GenericsGlobal;
        "home-page": HomePage;
        "install-page": InstallPage;
        "objects-containers": ObjectsContainers;
        "objects-drawers": ObjectsDrawers;
        "objects-grid": ObjectsGrid;
        "objects-images": ObjectsImages;
        "objects-medias": ObjectsMedias;
        "objects-modals": ObjectsModals;
        "objects-panels": ObjectsPanels;
        "page-not-found": PageNotFound;
        "page-template": PageTemplate;
        "site-header": SiteHeader;
        "site-nav": SiteNav;
        "utils-alignment": UtilsAlignment;
        "utils-boxing": UtilsBoxing;
        "utils-elevation": UtilsElevation;
        "utils-sizes": UtilsSizes;
        "utils-visibility": UtilsVisibility;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "blaze-site": LocalJSX.BlazeSite & JSXBase.HTMLAttributes<HTMLBlazeSiteElement>;
            "components-accordions": LocalJSX.ComponentsAccordions & JSXBase.HTMLAttributes<HTMLComponentsAccordionsElement>;
            "components-addresses": LocalJSX.ComponentsAddresses & JSXBase.HTMLAttributes<HTMLComponentsAddressesElement>;
            "components-alerts": LocalJSX.ComponentsAlerts & JSXBase.HTMLAttributes<HTMLComponentsAlertsElement>;
            "components-autocomplete": LocalJSX.ComponentsAutocomplete & JSXBase.HTMLAttributes<HTMLComponentsAutocompleteElement>;
            "components-avatars": LocalJSX.ComponentsAvatars & JSXBase.HTMLAttributes<HTMLComponentsAvatarsElement>;
            "components-back-to-top": LocalJSX.ComponentsBackToTop & JSXBase.HTMLAttributes<HTMLComponentsBackToTopElement>;
            "components-badges": LocalJSX.ComponentsBadges & JSXBase.HTMLAttributes<HTMLComponentsBadgesElement>;
            "components-breadcrumbs": LocalJSX.ComponentsBreadcrumbs & JSXBase.HTMLAttributes<HTMLComponentsBreadcrumbsElement>;
            "components-buttons": LocalJSX.ComponentsButtons & JSXBase.HTMLAttributes<HTMLComponentsButtonsElement>;
            "components-calendars": LocalJSX.ComponentsCalendars & JSXBase.HTMLAttributes<HTMLComponentsCalendarsElement>;
            "components-cards": LocalJSX.ComponentsCards & JSXBase.HTMLAttributes<HTMLComponentsCardsElement>;
            "components-counter": LocalJSX.ComponentsCounter & JSXBase.HTMLAttributes<HTMLComponentsCounterElement>;
            "components-divider": LocalJSX.ComponentsDivider & JSXBase.HTMLAttributes<HTMLComponentsDividerElement>;
            "components-file-upload": LocalJSX.ComponentsFileUpload & JSXBase.HTMLAttributes<HTMLComponentsFileUploadElement>;
            "components-headings": LocalJSX.ComponentsHeadings & JSXBase.HTMLAttributes<HTMLComponentsHeadingsElement>;
            "components-inputs": LocalJSX.ComponentsInputs & JSXBase.HTMLAttributes<HTMLComponentsInputsElement>;
            "components-lists": LocalJSX.ComponentsLists & JSXBase.HTMLAttributes<HTMLComponentsListsElement>;
            "components-menus": LocalJSX.ComponentsMenus & JSXBase.HTMLAttributes<HTMLComponentsMenusElement>;
            "components-overlays": LocalJSX.ComponentsOverlays & JSXBase.HTMLAttributes<HTMLComponentsOverlaysElement>;
            "components-pagination": LocalJSX.ComponentsPagination & JSXBase.HTMLAttributes<HTMLComponentsPaginationElement>;
            "components-progress": LocalJSX.ComponentsProgress & JSXBase.HTMLAttributes<HTMLComponentsProgressElement>;
            "components-ranges": LocalJSX.ComponentsRanges & JSXBase.HTMLAttributes<HTMLComponentsRangesElement>;
            "components-sticky": LocalJSX.ComponentsSticky & JSXBase.HTMLAttributes<HTMLComponentsStickyElement>;
            "components-tables": LocalJSX.ComponentsTables & JSXBase.HTMLAttributes<HTMLComponentsTablesElement>;
            "components-tabs": LocalJSX.ComponentsTabs & JSXBase.HTMLAttributes<HTMLComponentsTabsElement>;
            "components-timelines": LocalJSX.ComponentsTimelines & JSXBase.HTMLAttributes<HTMLComponentsTimelinesElement>;
            "components-toasts": LocalJSX.ComponentsToasts & JSXBase.HTMLAttributes<HTMLComponentsToastsElement>;
            "components-toggles": LocalJSX.ComponentsToggles & JSXBase.HTMLAttributes<HTMLComponentsTogglesElement>;
            "components-tooltips": LocalJSX.ComponentsTooltips & JSXBase.HTMLAttributes<HTMLComponentsTooltipsElement>;
            "components-trees": LocalJSX.ComponentsTrees & JSXBase.HTMLAttributes<HTMLComponentsTreesElement>;
            "components-typography": LocalJSX.ComponentsTypography & JSXBase.HTMLAttributes<HTMLComponentsTypographyElement>;
            "custom-build": LocalJSX.CustomBuild & JSXBase.HTMLAttributes<HTMLCustomBuildElement>;
            "example-basket": LocalJSX.ExampleBasket & JSXBase.HTMLAttributes<HTMLExampleBasketElement>;
            "example-login": LocalJSX.ExampleLogin & JSXBase.HTMLAttributes<HTMLExampleLoginElement>;
            "generics-global": LocalJSX.GenericsGlobal & JSXBase.HTMLAttributes<HTMLGenericsGlobalElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "install-page": LocalJSX.InstallPage & JSXBase.HTMLAttributes<HTMLInstallPageElement>;
            "objects-containers": LocalJSX.ObjectsContainers & JSXBase.HTMLAttributes<HTMLObjectsContainersElement>;
            "objects-drawers": LocalJSX.ObjectsDrawers & JSXBase.HTMLAttributes<HTMLObjectsDrawersElement>;
            "objects-grid": LocalJSX.ObjectsGrid & JSXBase.HTMLAttributes<HTMLObjectsGridElement>;
            "objects-images": LocalJSX.ObjectsImages & JSXBase.HTMLAttributes<HTMLObjectsImagesElement>;
            "objects-medias": LocalJSX.ObjectsMedias & JSXBase.HTMLAttributes<HTMLObjectsMediasElement>;
            "objects-modals": LocalJSX.ObjectsModals & JSXBase.HTMLAttributes<HTMLObjectsModalsElement>;
            "objects-panels": LocalJSX.ObjectsPanels & JSXBase.HTMLAttributes<HTMLObjectsPanelsElement>;
            "page-not-found": LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
            "page-template": LocalJSX.PageTemplate & JSXBase.HTMLAttributes<HTMLPageTemplateElement>;
            "site-header": LocalJSX.SiteHeader & JSXBase.HTMLAttributes<HTMLSiteHeaderElement>;
            "site-nav": LocalJSX.SiteNav & JSXBase.HTMLAttributes<HTMLSiteNavElement>;
            "utils-alignment": LocalJSX.UtilsAlignment & JSXBase.HTMLAttributes<HTMLUtilsAlignmentElement>;
            "utils-boxing": LocalJSX.UtilsBoxing & JSXBase.HTMLAttributes<HTMLUtilsBoxingElement>;
            "utils-elevation": LocalJSX.UtilsElevation & JSXBase.HTMLAttributes<HTMLUtilsElevationElement>;
            "utils-sizes": LocalJSX.UtilsSizes & JSXBase.HTMLAttributes<HTMLUtilsSizesElement>;
            "utils-visibility": LocalJSX.UtilsVisibility & JSXBase.HTMLAttributes<HTMLUtilsVisibilityElement>;
        }
    }
}
